
v0.11.0 (Unreleased)
--------------------

- TODO stub for explaining improvements to variable specification. Make this good! (:issue:`2052`).

- TODO stub for enforced keyword-only arguments for most parameters of most functions and classes (:issue:`2052,2081`).

Modernization of distribution functions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The distribution module has been completely overhauled, modernizing the API and introducing several new functions and features within existing functions. Some new features are explained here; the :ref:`tutorial documentation <distribution_tutorial>` has also been rewritten and serves as a good introduction to the functions.

New functions
^^^^^^^^^^^^^

First, three new functions, :func:`displot`, :func:`histplot` and :func:`ecdfplot` has been added (:pr:`2125`, :pr:`2141`, and :pr:`2157`).

:func:`displot` is a figure-level interface to the various distribution plot functions (analogous to :func:`relplot` or :func:`catplot`). It can draw univariate or bivariate histograms, density curves, ECDFs, and rug plots on a :class:`FacetGrid`.

:func:`histplot` draws univariate or bivariate histograms with a number of features, including:

- mapping multiple distributions with a ``hue`` semantic
- normalization to show density, probability, or frequency statistics
- flexible parameterization of bin size, including proper bins for discrete variables
- adding a KDE fit to show a smoothed distribution over all bin statistics
- experimental support for histograms over categorical and datetime variables. 

:func:`ecdfplot` draws univariate empirical cumulative distribution functions, using a similar interface.

Changes to existing functions
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Second, the existing functions :func:`kdeplot` and :func:`rugplot` have been completely overhauled (see :pr:`2060,2104`).

Two of the oldest functions in the library, these lacked aspects of the otherwise-common seaborn API, such as the ability to assign variables by name from a ``data`` object; they had no capacity for semantic mapping; and they had numerous other inconsistencies and smaller issues.

The overhauled functions now share a common API with the rest of seaborn, they can show conditional distributions by mapping a third variable with a ``hue`` semantic, and have been improved in numerous other ways. The github pull request (:pr:`2104`) has a longer explanation of the changes and the motivation behind them.

This is a necessarily API-breaking change. The parameter names for the positional variables
are now ``x`` and ``y``, and the old names have been deprecated. Efforts were made to handle and warn when using the deprecated API, but it is strongly suggested to check your plots carefully.

Additionally, the optional statsmodels-based computation of the KDE has been removed. Because there were some inconsistencies between the way different parameters (specifically, ``bw``, ``clip``, and ``cut``) were implemented by each backend, this may cause plots to look different after an upgrade when non-default values were set for these parameters. Support for using non-Gaussian kernels, which was available only in the statsmodels backend, has been removed. Support for drawing a cumulative distribution function, which was not previously available with the scipy backend, has been added, including for bivariate densities.

Other new features include:

- several options for representing multiple densities from subsets of data defined by semantic variables (with the new ``multiple`` and ``common_norm`` parameters)
- weighted KDE (using the new ``weights=`` parameter)
- better control over the smoothing bandwidth (using the new ``bw_adjust`` parameter)
- more meaningful and configurable selection of the contours that represent a bivariate density (using the new ``thresh`` and ``levels`` parameters)
- log-space density estimation (using the new ``log_scale`` parameter, or by scaling the data axis before plotting)
- "bivariate" rug plots with a single function call (by assigning both ``x`` and ``y``)

Deprecations
^^^^^^^^^^^^

Finally, the :func:`distplot` function is now formally deprecated. Its features have been subsumed by :func:`displot` and :func:`histplot`. Some effort was made to gradually transition :func:`distplot` by adding the features in :func:`displot` and handling backwards compatibility, but this proved to be too difficult. The similarity in the names will likely cause some confusion during the transition, which is regrettable.

Related enhancements and changes
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

These additions facilitated new features and forced changes in :func:`jointplot` and :class:`JointGrid` :pr:`2210`):

- Added support for the ``hue`` semantic in :func:`jointplot`/:class:`JointGrid`. This support is lightweight and simply delegates the mapping to the underlying axes-level functions.

- Added ``kind="hist"`` to :func:`jointplot`, which draws a bivariate histogram on the joint axes and univariate histograms on the marginal axes.

- The various modes of `jointplot` that plot marginal histograms now use `func:`histplot` rather than :func:`distplot`. This slightly changes the default appearance and affects the valid keyword arguments that can be passed to customize the plot.


Other changes
~~~~~~~~~~~~~

General API
^^^^^^^^^^^^^

- Added two new chapters to the user guide, one giving an overview of the :ref:`types of functions in seaborn <function_tutorial>`, and one discussing the different :ref:`data formats <data_tutorial>` that seaborn understands.

- Changed how functions that use different representations for numeric and categorical data handle vectors with an ``object`` data type. Previously, data was considered numeric if it could be coerced to a float representation without error. Now, object-typed vectors are considered numeric only when their contents are themselves numeric. As a consequence, numbers that are encoded as strings will now be treated as categorical data (:pr:`2084`).

- Removed an optional (and undocumented) dependency on BeautifulSoup (:pr:`2190`).

- Deprecated the ``axlabel`` function; use ``ax.set(xlabel=, ylabel=)`` instead.

- Deprecated the ``iqr`` function; use :func:`scipy.stats.iqr` instead.

- Final removal of the ``annotate`` method on :class:`JointGrid` and related parameters, which was deprecated in the v0.9.0 release.

Relational plots
^^^^^^^^^^^^^^^^

- Reduced some of the surprising behavior of relational plot legends when using a numeric hue or size mapping. Added an "auto" mode (the new default) that chooses between "brief" and "full" based on the number of unique levels of the variable(s). Modified the ticking algorithm to only show values inside the limits of the data and to show up to 6 values. Changed the approach to the legend title: the normal matplotlib legend title is used when only one variable is assigned a semantic mapping, whereas the old approach of adding an invisible legend artist with a subtitle label is used only when multiple semantic variables are defined. The subtitles are now also left-aligned and set to the legend title font size. (:pr:`2229`).

- Plots with a ``style`` semantic can now generate an infinite number of unique dashes and/or markers by default. Previously, an error would be raised if the ``style`` variable had more levels than could be mapped using the default lists. The existing defaults were slightly modified as part of this change; if you need to exactly reproduce plots from earlier versions, refer to the `old defaults <https://github.com/mwaskom/seaborn/blob/v0.10.1/seaborn/relational.py#L24>`_ (:pr:`2075`).

- Changed how :func:`scatterplot` sets the default linewidth for the edges of the scatter points. New behavior is to scale with the point sizes themselves (on a plot-wise, not point-wise basis). This change also slightly reduces the default width when point sizes are not varied. Set ``linewidth=0.75`` to reproduce the previous behavior. (:pr:`2708`).

- Improved support for datetime variables in :func:`scatterplot` and :func:`lineplot` (:pr:`2138`). 

- Fixed a bug where :func:`lineplot` did not pass the ``linestyle`` parameter down to matplotlib (:pr:`2095`).

- Adapted to a change in matplotlib that prevented passing vectors of literal values to ``c`` and ``s`` in :func:`scatterplot` (:pr:`2079`).

Categorical plots
^^^^^^^^^^^^^^^^^

- Fixed a few issues with :func:`boxenplot` regarding the way the number of boxes are calculated. ``k_depth="tukey"`` is now the default boxes calculation method as the previous default (`"proportion"`) produces too many boxes when datasets are small. Added the option to specify the desired number of boxes as a scalar (e.g. ``k_depth=6``) or just plot boxes that will cover most of the data points (with ``k_depth="full"``). Added a new parameter ``trust_alpha`` to control the number of boxes when ``k_depth="trustworthy"``. Additionally, the visual appearance of :func:`boxenplot` now more closely resembles :func:`boxplot`, and thin boxes will remain visible when the edges are white. Finally, the ``lvplot`` function (the previously-deprecated name for :func:`boxenplot`) has been removed. (:pr:`2086`).

- Allowed :func:`catplot` to not unify categories across facets if the categorical axis is not shared (i.e. by specifying ``sharex=False``) (:pr:`2196`).

- Improved the error messages produced when categorical plots process the orientation parameter.

- Added an explicit warning in :func:`swarmplot` when more than 5% of the points overlap in the "gutters" of the swarm (:pr:`2045`).

Multi-plot grids
^^^^^^^^^^^^^^^^

- Added a ``tight_layout`` method to :class:`FacetGrid` and :class:`PairGrid`, which runs the :func:`matplotlib.pyplot.tight_layout` algorithm without interference from the external legend (:pr:`2073`).

- Added the ``axes_dict`` attribute to :class:`FacetGrid` for named access to the component axes (:pr:`2046`).

- Made :meth:`FacetGrid.set_axis_labels` clear labels from "interior" axes (:pr:`2046`).

- Added the ``marginal_ticks`` parameter to :class:`JointGrid` which, if set to ``True``, will show ticks on the count/density axis of the marginal plots (:pr:`2210`).

- Improved :meth:`FacetGrid.set_titles` with ``margin_titles=True``, such that texts representing the original row titles are removed before adding new ones (:pr:`2083`).

- Changed the default value for ``dropna`` to ``False`` in :class`FacetGrid`, :class:`PairGrid`, :class`JointGrid`, and corresponding functions. As all or nearly all seaborn and matplotlib plotting functions handle missing data well, this option is no longer useful, but it causes problems in some edge cases. It may be deprecated in the future. (:pr:2204).

- Fixed bug in :class:`PairGrid` that appeared when setting ``corner=True`` and ``despine=False`` (:pr:`2203`).

Theming and style
^^^^^^^^^^^^^^^^^

- Added a rich HTML representation to the object returned by :func:`color_palette` (:pr:2225).

- Fixed a bug in :func:`set_context` that prevented ``legend.title_fontsize`` rcParam from scaling when scaling fonts (:pr:`2214`).